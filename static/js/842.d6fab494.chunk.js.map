{"version":3,"file":"static/js/842.d6fab494.chunk.js","mappings":"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","sources":["components/Container/Container.styled.js","components/Container/Container.jsx","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","API/get-trending.js","pages/HomePage.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ContainerWrap = styled.div`\n// width:350px;\n\npadding: 10px0 10px 100px 10px;\n`;","import PropTypes from 'prop-types';\nimport { ContainerWrap } from './Container.styled';\n\n\nfunction Container({ children }) {\n  return <ContainerWrap>{ children}</ContainerWrap>\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\nexport default Container;","import styled from '@emotion/styled';\n\n\n\nexport const Item = styled.li`\n  display: flex;\n  margin-top: 50px;\n  justify-content: center;\n  flex-basis: calc((100% - 90px) / 3);\n    \n\n// width: calc((100% - 6 * 10px) / 3);\n`;\n\nexport const Title = styled.p`\n  font-size: 20px;\n  font-weight: 700;\n  text-align: center;\n    // width: 450px;\n  margin-bottom: 15px;\n  color:#000000;\n  \n`;\n\nexport const Poster = styled.img`\n  width: 350px;\n  margin-bottom: 15px;\n`;\n\nexport const VoteWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 300px;\n`;\n\nexport const VoteAverage = styled.p`\ncolor:#000000;\n// text-decoration: none;\n`;\n\nexport const VoteCount = styled.p`\ncolor:#000000;\n`;\nexport const Value = styled.span`\nfont-weight: 700;\n`;","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Item,\n  Title,\n  Poster,\n  VoteWrap,\n  VoteAverage,\n  VoteCount,\n  Value,\n} from './MovieCard.styled';\nimport bgPoster from '../../utils/Image/IMAX.jpg'\n\nfunction MovieCard({ id,title,poster,voteAverage,voteCount })\n{\n    const location = useLocation();\n    return (\n    <Item>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n          <Title>{title ? title : 'Movie without a title'}</Title>\n          \n        <Poster\n          src={poster ? `https://image.tmdb.org/t/p/w500/${poster}` : bgPoster}\n          alt={title}\n        />\n        <VoteWrap>\n          <VoteAverage>\n            Vote average: <Value>{voteAverage}</Value>\n          </VoteAverage>\n          <VoteCount>\n            Vote count:<Value>{voteCount}</Value>\n          </VoteCount>\n        </VoteWrap>\n      </Link>\n    </Item>\n  );\n}\n\nMovieCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string,\n  poster: PropTypes.string.isRequired,\n  voteAverage: PropTypes.number.isRequired,\n  voteCount: PropTypes.number.isRequired,\n};\nexport default MovieCard;","import styled from '@emotion/styled';\n\nexport const Wrap = styled.ul`\n list-style-type: none;\n     display: flex;\n    flex-wrap: wrap;\n    margin: -10px;\n//  background-image:linear-gradient(to right, #0B0A0A, #FFFFFF);\n    //  background-image:linear-gradient(to left, #0B0A0A, #FFFFFF);\n`;","import PropTypes from 'prop-types';\nimport MovieCard from 'components/MovieCard';\nimport { Wrap } from './MoviesList.styled';\n\nfunction MoviesList({ movies }) {\n  return (\n    <Wrap>\n      {movies.map(({ id, title, poster, voteAverage, voteCount }) => {\n\n        return (\n          <MovieCard\n            key={id}\n            id={id}\n            title={title}\n            poster={poster}\n            voteAverage={voteAverage}\n            voteCount={voteCount} />\n        );\n      })}\n    </Wrap>\n  );\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      poster: PropTypes.string.isRequired,\n      voteAverage: PropTypes.number.isRequired,\n      voteCount: PropTypes.number.isRequired,\n    }),).isRequired,\n};\nexport default MoviesList; \n","async function getTrending() {\n  const key = '718b6c0b68c7f19fbdcdb1a100511982';\n  const BASEURL = 'https://api.themoviedb.org/3/trending/all/day';\n  const filter = `?api_key=${key}`;\n\n  const response = await fetch(`${BASEURL}${filter}`);\n  const data = await response.json();\n\n  return data;\n}\nexport default getTrending;\n","import { useState, useEffect } from 'react';\nimport getTrending from 'API/get-trending';\nimport MoviesList from 'components/MoviesList';\nimport Container from 'components/Container';\n\n\nfunction HomePage() {\n  const [movies, setMovies] = useState(null)\n\n  useEffect(() => {\n    getTrending().then(({ results }) => {\n      const moviesArray = [];\n\n      results.map(\n        ({\n          id,\n          original_title,\n          poster_path,\n          vote_average,\n          vote_count\n        }) => {\n          const movie = {\n            id,\n            title: original_title,\n            poster: poster_path,\n            voteAverage: vote_average,\n            voteCount: vote_count,\n          };\n          return moviesArray.push(movie);\n        },\n      );\n      setMovies(moviesArray);\n    });\n  }, []);\n  \n  return (\n    movies && (\n      <Container>\n        <MoviesList movies={movies} />\n      </Container>\n    )\n  );\n}\nexport default HomePage;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["ContainerWrap","styled","children","Item","Title","Poster","VoteWrap","VoteAverage","VoteCount","Value","id","title","poster","voteAverage","voteCount","location","useLocation","to","state","from","src","bgPoster","alt","Wrap","movies","map","getTrending","filter","fetch","response","json","data","useState","setMovies","useEffect","then","results","moviesArray","movie","original_title","poster_path","vote_average","vote_count","push","Container","MoviesList","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}