{"version":3,"file":"static/js/971.44cebfd3.chunk.js","mappings":"kLAEaA,E,OAAgBC,EAAAA,IAAH,4E,SCS1B,MAPA,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,SAACF,EAAD,UAAiBE,GACzB,C,4GCFYC,EAAOF,EAAAA,EAAAA,GAAH,mLAUJG,EAAQH,EAAAA,EAAAA,EAAH,4JAULI,EAASJ,EAAAA,EAAAA,IAAH,iEAKNK,EAAWL,EAAAA,EAAAA,IAAH,8FAMRM,EAAcN,EAAAA,EAAAA,EAAH,mEAKXO,EAAYP,EAAAA,EAAAA,EAAH,wCAGTQ,EAAQR,EAAAA,EAAAA,KAAH,2C,kBCElB,I,EAAA,EAhCA,YACC,IADoBS,EACrB,EADqBA,GAAGC,EACxB,EADwBA,MAAMC,EAC9B,EAD8BA,OAAOC,EACrC,EADqCA,YAAYC,EACjD,EADiDA,UAEvCC,GAAWC,EAAAA,EAAAA,MACjB,OACA,SAACb,EAAD,WACE,UAAC,KAAD,CAAMc,GAAE,kBAAaP,GAAMQ,MAAO,CAAEC,KAAMJ,GAA1C,WACI,SAACX,EAAD,UAAQO,GAAgB,2BAE1B,SAACN,EAAD,CACEe,IAAKR,EAAM,0CAAsCA,GAAWS,EAC5DC,IAAKX,KAEP,UAACL,EAAD,YACE,UAACC,EAAD,6BACgB,SAACE,EAAD,UAAQI,QAExB,UAACL,EAAD,0BACa,SAACC,EAAD,UAAQK,cAM9B,EClCYS,EAAOtB,EAAAA,EAAAA,GAAH,yPC+BjB,MA7BA,YAAiC,IAAXuB,EAAU,EAAVA,OACpB,OACE,SAACD,EAAD,UACGC,EAAOC,KAAI,YAAoD,IAAjDf,EAAgD,EAAhDA,GAAIC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,UAE7C,OACE,SAAC,EAAD,CAEEJ,GAAIA,EACJC,MAAOA,EACPC,OAAQA,EACRC,YAAaA,EACbC,UAAWA,GALNJ,EAOV,KAGN,C,2GCrBcgB,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BC,GAA/B,kGAAsCC,EAAtC,+BAA6C,EAErCC,EAAU,4CACVC,EAHR,mBACc,mCADd,kBAG0CH,EAH1C,gCAGuEC,EAHvE,iCAKyBG,MAAM,GAAD,OAAIF,GAAJ,OAAcC,IAL5C,cAKQE,EALR,gBAMqBA,EAASC,OAN9B,cAMQC,EANR,yBAQSA,GART,oEAWA,M,SAX+B,GAAhBR,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,kBCAA,SAASS,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,CACT,CCXA,SAASQ,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GAC3CC,IAAmBG,EAAUA,EAAQnB,QAAO,SAAUoB,GACpD,OAAOX,OAAOY,yBAAyBN,EAAQK,GAAKT,UACtD,KAAKM,EAAKK,KAAKC,MAAMN,EAAME,EAC7B,CAEA,OAAOF,CACT,CAEe,SAASO,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAS,MAAQF,UAAUD,GAAKC,UAAUD,GAAK,CAAC,EACpDA,EAAI,EAAIZ,EAAQL,OAAOoB,IAAS,GAAIC,SAAQ,SAAUvB,GACpD,EAAekB,EAAQlB,EAAKsB,EAAOtB,GACrC,IAAKE,OAAOsB,0BAA4BtB,OAAOuB,iBAAiBP,EAAQhB,OAAOsB,0BAA0BF,IAAWf,EAAQL,OAAOoB,IAASC,SAAQ,SAAUvB,GAC5JE,OAAOC,eAAee,EAAQlB,EAAKE,OAAOY,yBAAyBQ,EAAQtB,GAC7E,GACF,CAEA,OAAOkB,CACT,C,6CCvBaQ,EAAa9D,EAAAA,EAAAA,KAAH,oEAKV+D,EAAc/D,EAAAA,EAAAA,MAAH,qIAUXgE,EAAehE,EAAAA,EAAAA,OAAH,oO,kBCiBzB,MA7BA,WACE,IAAMc,GAAWC,EAAAA,EAAAA,MACXkD,GAAWC,EAAAA,EAAAA,MACjB,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,eAcA,OACE,SAACC,EAAA,EAAD,WACE,UAACP,EAAD,CAAYQ,SAfhB,SAAsBC,GACpBA,EAAEC,iBAEF,IAAMnC,EAAQkC,EAAEjB,OAAOmB,SAAS/C,MAAMW,MAGtC4B,EAAS,OACJnD,GADG,IAEN4D,OAAO,SAAD,OAAWrC,KAGpB,EAIG,WACE,SAAC0B,EAAD,CAAaY,KAAK,OAAOC,KAAK,QAAQC,aAAcT,EAAaU,IAAI,YACrE,SAACd,EAAD,CAAcW,KAAK,SAAnB,UACE,SAAC,MAAD,UAKT,E,SCaD,MAvCA,WAAuB,IAAD,EACZD,GAAW3D,EAAAA,EAAAA,MAAX2D,OACFhD,EAAK,UAAG,IAAIqD,gBAAgBL,GAAQI,IAAI,gBAAnC,QAA+C,GAE1D,GAA4BE,EAAAA,EAAAA,UAAS,MAArC,eAAOzD,EAAP,KAAe0D,EAAf,KAuBA,OArBAC,EAAAA,EAAAA,YAAU,WACM,KAAVxD,GACFD,EAAgBC,GAAOyD,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACvBC,EAAc,GAEpBD,EAAQ5D,KAAI,YAAoE,IACxE8D,EAAQ,CACZ7E,GAF2E,EAAhEA,GAGXC,MAH2E,EAA5D6E,eAIf5E,OAJ2E,EAA5C6E,YAK/B5E,YAL2E,EAA/B6E,aAM5C5E,UAN2E,EAAjB6E,YAQ5D,OAAOL,EAAYlC,KAAKmC,EACzB,IACDL,EAAUI,EACX,GAGJ,GAAE,CAAC3D,KAGF,iCACE,SAAC,EAAD,IACCH,IACC,+BACE,SAACoE,EAAA,EAAD,CAAYpE,OAAQA,QAK7B,C,sGC5CD,SAASqE,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ7D,EAAK8D,GACpE,IACE,IAAIC,EAAON,EAAIzD,GAAK8D,GAChB7D,EAAQ8D,EAAK9D,KAInB,CAHE,MAAO+D,GAEP,YADAL,EAAOK,EAET,CAEID,EAAKE,KACPP,EAAQzD,GAERiE,QAAQR,QAAQzD,GAAO8C,KAAKa,EAAOC,EAEvC,CAEe,SAASM,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOnD,UACX,OAAO,IAAI8C,SAAQ,SAAUR,EAASC,GACpC,IAAIF,EAAMW,EAAGpD,MAAMqD,EAAME,GAEzB,SAASX,EAAM3D,GACbuD,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQ5D,EAClE,CAEA,SAAS4D,EAAOW,GACdhB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASW,EACnE,CAEAZ,OAAMa,EACR,GACF,CACF,C","sources":["components/Container/Container.styled.js","components/Container/Container.jsx","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","API/get-search-movies.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","pages/MoviesPage.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ContainerWrap = styled.div`\n// width:350px;\n\npadding: 10px0 10px 100px 10px;\n`;","import PropTypes from 'prop-types';\nimport { ContainerWrap } from './Container.styled';\n\n\nfunction Container({ children }) {\n  return <ContainerWrap>{ children}</ContainerWrap>\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\nexport default Container;","import styled from '@emotion/styled';\n\n\n\nexport const Item = styled.li`\n  display: flex;\n  margin-top: 50px;\n  justify-content: center;\n  flex-basis: calc((100% - 90px) / 3);\n    \n\n// width: calc((100% - 6 * 10px) / 3);\n`;\n\nexport const Title = styled.p`\n  font-size: 20px;\n  font-weight: 700;\n  text-align: center;\n    // width: 450px;\n  margin-bottom: 15px;\n  color:#000000;\n  \n`;\n\nexport const Poster = styled.img`\n  width: 350px;\n  margin-bottom: 15px;\n`;\n\nexport const VoteWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 300px;\n`;\n\nexport const VoteAverage = styled.p`\ncolor:#000000;\n// text-decoration: none;\n`;\n\nexport const VoteCount = styled.p`\ncolor:#000000;\n`;\nexport const Value = styled.span`\nfont-weight: 700;\n`;","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Item,\n  Title,\n  Poster,\n  VoteWrap,\n  VoteAverage,\n  VoteCount,\n  Value,\n} from './MovieCard.styled';\nimport bgPoster from '../../utils/Image/IMAX.jpg'\n\nfunction MovieCard({ id,title,poster,voteAverage,voteCount })\n{\n    const location = useLocation();\n    return (\n    <Item>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n          <Title>{title ? title : 'Movie without a title'}</Title>\n          \n        <Poster\n          src={poster ? `https://image.tmdb.org/t/p/w500/${poster}` : bgPoster}\n          alt={title}\n        />\n        <VoteWrap>\n          <VoteAverage>\n            Vote average: <Value>{voteAverage}</Value>\n          </VoteAverage>\n          <VoteCount>\n            Vote count:<Value>{voteCount}</Value>\n          </VoteCount>\n        </VoteWrap>\n      </Link>\n    </Item>\n  );\n}\n\nMovieCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string,\n  poster: PropTypes.string.isRequired,\n  voteAverage: PropTypes.number.isRequired,\n  voteCount: PropTypes.number.isRequired,\n};\nexport default MovieCard;","import styled from '@emotion/styled';\n\nexport const Wrap = styled.ul`\n list-style-type: none;\n     display: flex;\n    flex-wrap: wrap;\n    margin: -10px;\n//  background-image:linear-gradient(to right, #0B0A0A, #FFFFFF);\n    //  background-image:linear-gradient(to left, #0B0A0A, #FFFFFF);\n`;","import PropTypes from 'prop-types';\nimport MovieCard from 'components/MovieCard';\nimport { Wrap } from './MoviesList.styled';\n\nfunction MoviesList({ movies }) {\n  return (\n    <Wrap>\n      {movies.map(({ id, title, poster, voteAverage, voteCount }) => {\n\n        return (\n          <MovieCard\n            key={id}\n            id={id}\n            title={title}\n            poster={poster}\n            voteAverage={voteAverage}\n            voteCount={voteCount} />\n        );\n      })}\n    </Wrap>\n  );\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      poster: PropTypes.string.isRequired,\n      voteAverage: PropTypes.number.isRequired,\n      voteCount: PropTypes.number.isRequired,\n    }),).isRequired,\n};\nexport default MoviesList; \n","async function getSearchMovies(query, page = 1) {\n  const key = '718b6c0b68c7f19fbdcdb1a100511982';\n  const BASEURL = 'https://api.themoviedb.org/3/search/movie';\n  const filter = `?api_key=${key}&query=${query}&language=en-US&page=${page}&include_adult=false`;\n\n  const response = await fetch(`${BASEURL}${filter}`);\n  const data = await response.json();\n\n  return data;\n}\n\nexport default getSearchMovies;","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import styled from '@emotion/styled';\n\n\nexport const FormSearch = styled.form`\ndisplay: flex;\n  justify-content: center;\n`;\n\nexport const InputSearch = styled.input`\n  width: 400px;\n  height: 30px;\n\n  padding: 0 10px 0 10px;\n  margin-right: 15px;\n  margin-top: 30px;\n\n`;\n\nexport const ButtonSubmit = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100px;\n  height: 33px;\n  margin-top: 30px;\n \n\n  font-size: 15px;\n  font-family: inherit;\n  cursor: pointer;\n`;\n\n","\nimport { useLocation, useNavigate, useSearchParams } from 'react-router-dom';\nimport Container from 'components/Container';\nimport { FormSearch, InputSearch, ButtonSubmit } from './SearchBar.styled';\nimport { FaSearch } from 'react-icons/fa';\n\nfunction SearchBar() {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  function onSubmitForm(e) {\n    e.preventDefault();\n    \n    const value = e.target.elements.query.value;\n\n\n    navigate({\n      ...location,\n      search: `query=${value}`,\n    });\n   \n  }\n\n  return (\n    <Container>\n      <FormSearch onSubmit={onSubmitForm}>\n        <InputSearch type=\"text\" name=\"query\" defaultValue={searchParams.get('query')} />\n        <ButtonSubmit type=\"submit\">\n          <FaSearch />\n        </ButtonSubmit>\n      </FormSearch>\n    </Container>\n  );\n}\n\nexport default SearchBar;\n","import getSearchMovies from 'API/get-search-movies';\nimport { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport SearchBar from 'components/SearchBar';\nimport MoviesList from 'components/MoviesList';\n\n\nfunction MoviesPage() {\n  const { search } = useLocation();\n  const query = new URLSearchParams(search).get('query') ?? '';\n\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    if (query !== '') {\n      getSearchMovies(query).then(({ results }) => {\n        const moviesArray = [];\n        \n        results.map(({ id, original_title, poster_path, vote_average, vote_count }) => {\n          const movie = {\n            id,\n            title: original_title,\n            poster: poster_path,\n            voteAverage: vote_average,\n            voteCount: vote_count,\n          };\n          return moviesArray.push(movie);\n        },);\n        setMovies(moviesArray);\n      });\n  }\n\n  }, [query]);\n  \n  return (\n    <>\n      <SearchBar />\n      {movies && (\n        <>\n          <MoviesList movies={movies} />\n        </>\n      )}\n    </>\n  );\n}\n\nexport default MoviesPage;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["ContainerWrap","styled","children","Item","Title","Poster","VoteWrap","VoteAverage","VoteCount","Value","id","title","poster","voteAverage","voteCount","location","useLocation","to","state","from","src","bgPoster","alt","Wrap","movies","map","getSearchMovies","query","page","BASEURL","filter","fetch","response","json","data","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","FormSearch","InputSearch","ButtonSubmit","navigate","useNavigate","useSearchParams","searchParams","Container","onSubmit","e","preventDefault","elements","search","type","name","defaultValue","get","URLSearchParams","useState","setMovies","useEffect","then","results","moviesArray","movie","original_title","poster_path","vote_average","vote_count","MoviesList","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","_asyncToGenerator","fn","self","this","args","err","undefined"],"sourceRoot":""}