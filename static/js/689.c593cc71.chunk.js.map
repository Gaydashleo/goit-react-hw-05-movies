{"version":3,"file":"static/js/689.c593cc71.chunk.js","mappings":"2OAAeA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BC,GAA/B,mFACc,mCACNC,EAFR,6CAEwDD,EAFxD,YAGQE,EAHR,mBACc,mCADd,mCAKyBC,MAAM,GAAD,OAAIF,GAAJ,OAAcC,IAL5C,cAKQE,EALR,gBAMqBA,EAASC,OAN9B,cAMQC,EANR,yBAQSA,GART,mEAUA,I,QAAA,E,SAV+B,GAAhBP,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,kBCGFQ,EAAOC,EAAAA,EAAAA,GAAH,0BAIJC,EAAOD,EAAAA,EAAAA,GAAH,gEAKJE,EAAQF,EAAAA,EAAAA,GAAH,8CAILG,EAAOH,EAAAA,EAAAA,EAAH,yC,SCajB,MA1BA,YAAmC,IAAZI,EAAW,EAAXA,QACrB,OACE,+BACE,SAACL,EAAD,UACGK,EAAQC,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KAC1B,OACE,UAACP,EAAD,YACE,SAACC,EAAD,UAAQK,KACR,SAACJ,EAAD,UAAOK,MAFEF,EAKd,OAIR,ECmBD,MA5BA,WACE,IAAQd,GAAYiB,EAAAA,EAAAA,MAAZjB,QACR,GAA8BkB,EAAAA,EAAAA,UAAS,MAAvC,eAAON,EAAP,KAAgBO,EAAhB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACRrB,EAAgBC,GAASqB,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACzBC,EAAe,GAErBD,EAAQT,KAAI,YAA8B,IAClCW,EAAS,CACbV,GAFqC,EAA1BA,GAEPC,OAFiC,EAAtBA,OAEHC,KAFyB,EAAdS,SAKzB,OAAOF,EAAaG,KAAKF,EAC1B,IAEDL,EAAWI,EACZ,GACF,GAAE,CAACvB,IAEGY,GAAWA,EAAQe,OAAS,GACjC,SAAC,EAAD,CAAaf,QAASA,KAEtB,+BACE,oDAGL,C","sources":["API/get-movie-reviews.js","components/ReviewsList/ReviewsList.styled.js","components/ReviewsList/ReviewsList.jsx","pages/Reviews.js"],"sourcesContent":["async function getMovieReviews(movieId) {\n  const key = '718b6c0b68c7f19fbdcdb1a100511982';\n  const BASEURL = `https://api.themoviedb.org/3/movie/${movieId}/reviews`;\n  const filter = `?api_key=${key}&language=en-US&page=1`;\n  \n  const response = await fetch(`${BASEURL}${filter}`);\n  const data = await response.json();\n\n  return data;\n}\nexport default getMovieReviews;","import styled from '@emotion/styled';\n\n\nexport const List = styled.ul`\n\n`;\n\nexport const Item = styled.li`\npadding: 15px;\n  margin-bottom: 15px;\n`;\n\nexport const Title = styled.h2`\nmargin-bottom: 15px;\n`;\n\nexport const Text = styled.p`\nline-height: 2;\n`;","import PropTypes from 'prop-types';\nimport { List, Item, Title,Text } from './ReviewsList.styled';\n\nfunction ReviewsList({ reviews }) {\n  return (\n    <>\n      <List>\n        {reviews.map(({ id, author, text }) => {\n          return (\n            <Item key={id}>\n              <Title>{author}</Title>\n              <Text>{text}</Text>\n            </Item>\n          );\n        })}\n      </List>\n    </>\n    );\n}\nReviewsList.propTypes = {\n  rewiews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default ReviewsList;","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport getMovieReviews from 'API/get-movie-reviews';\nimport ReviewsList from 'components/ReviewsList';\n\n\n\n\n\nfunction Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(({ results }) => {\n      const reviewsArray = [];\n\n      results.map(({ id, author, content }) => {\n        const review = {\n          id, author, text: content,\n        };\n\n        return reviewsArray.push(review);\n      });\n\n      setReviews(reviewsArray);\n    });\n  }, [movieId]);\n\n  return reviews && reviews.length > 0 ? (\n    <ReviewsList reviews={reviews} />\n  ) : (\n    <>\n      <h2> We don't have reviews</h2>\n    </>\n  );\n}\nexport default Reviews;\n"],"names":["getMovieReviews","movieId","BASEURL","filter","fetch","response","json","data","List","styled","Item","Title","Text","reviews","map","id","author","text","useParams","useState","setReviews","useEffect","then","results","reviewsArray","review","content","push","length"],"sourceRoot":""}