{"version":3,"file":"static/js/377.82a3412b.chunk.js","mappings":"yNAAeA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BC,GAA/B,mFACc,mCACNC,EAFR,6CAEwDD,EAFxD,YAGQE,EAHR,mBACc,mCADd,4BAKyBC,MAAM,GAAD,OAAIF,GAAJ,OAAcC,IAL5C,cAKQE,EALR,gBAMqBA,EAASC,OAN9B,cAMQC,EANR,yBAQSA,GART,mEAUA,I,UAAA,E,SAV+B,GAAhBP,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,2BCEFQ,EAAOC,EAAAA,EAAAA,GAAH,sFAMJC,EAAOD,EAAAA,EAAAA,GAAH,kEAKJE,EAAYF,EAAAA,EAAAA,IAAH,4GAOTG,EAAQH,EAAAA,EAAAA,IAAH,uCAILI,EAAOJ,EAAAA,EAAAA,EAAH,iF,iBCYjB,MA/BA,YAAiC,IAAXK,EAAU,EAAVA,OACpB,OACE,SAACC,EAAA,EAAD,CAAWC,WAAS,EAApB,UACE,SAACR,EAAD,UACGM,EAAOG,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACvB,OACE,UAACV,EAAD,YACE,SAACC,EAAD,WACE,SAACC,EAAD,CACES,IACED,EAAK,0CAAsCA,GAAUE,EACrDC,IAAKJ,OAGX,SAACN,EAAD,UAAOM,MARED,EAWd,OAIR,E,kBCGD,MArBE,WACE,IAAQjB,GAAYuB,EAAAA,EAAAA,MAAZvB,QACR,GAA4BwB,EAAAA,EAAAA,UAAS,MAArC,eAAOX,EAAP,KAAeY,EAAf,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR3B,EAAgBC,GAAS2B,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACzBC,EAAc,GAEpBD,EAAKZ,KAAI,YAAiC,IAClCc,EAAQ,CACZb,GAFqC,EAA7BA,GAGRC,KAHqC,EAAzBA,KAIZC,MAJqC,EAAnBY,cAMpB,OAAOF,EAAYG,KAAKF,EACzB,IACDL,EAAUI,EACX,GACF,GAAE,CAAC7B,IACGa,IAAS,SAAC,EAAD,CAAYA,OAAQA,GACvC,C","sources":["API/get-movie-credits .js","components/ActorsList/ActorsList.styled.js","components/ActorsList/ActorsList.jsx","pages/Cast.js"],"sourcesContent":["async function getMovieCredits(movieId) {\n  const key = '718b6c0b68c7f19fbdcdb1a100511982';\n  const BASEURL = `https://api.themoviedb.org/3/movie/${movieId}/credits`;\n  const filter = `?api_key=${key}&language=en-US`;\n  \n  const response = await fetch(`${BASEURL}${filter}`);\n  const data = await response.json();\n\n  return data;\n}\nexport default getMovieCredits;","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n display: flex;\n    flex-wrap: wrap;\n    // margin: -10px;\n`;\n\nexport const Item = styled.li`\nmargin-bottom: 50px;\nmargin-right:10px;\n`;\n\nexport const PhotoWrap = styled.div`\n  display: flex;\n  align-items: center;\n  height: 375px;\n  margin-bottom: 15px;\n`;\n\nexport const Photo = styled.img`\nwidth: 250px;\n`;\n\nexport const Name = styled.p`\nfont-size: 20px;\n  font-weight: 700;\n  color:#000000;\n`;","import propTypes from 'prop-types';\nimport bgActor from '../../Image/oscar.jpg';\nimport { List, Item, PhotoWrap, Photo, Name } from './ActorsList.styled';\nimport Container from 'components/Container';\n\nfunction ActorsList({ actors }) {\n  return (\n    <Container isPadding>\n      <List>\n        {actors.map(({ id, name, photo }) => {\n          return (\n            <Item key={id}>\n              <PhotoWrap>\n                <Photo\n                  src={\n                    photo ? `https://image.tmdb.org/t/p/w500/${photo}` : bgActor}\n                    alt={name}\n                />\n              </PhotoWrap>\n              <Name>{name}</Name>\n            </Item>\n          );\n        })}\n      </List>\n    </Container>\n  );\n}\nActorsList.propTypes = {\n  actors: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.number,\n      name: propTypes.string,\n      photo: propTypes.string,\n    }),\n  ).isRequired,\n};\nexport default ActorsList;","import getMovieCredits from 'API/get-movie-credits ';\nimport ActorsList from 'components/ActorsList';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\n\n\n\n  function Cast() {\n    const { movieId } = useParams();\n    const [actors, setActors] = useState(null);\n\n    useEffect(() => {\n      getMovieCredits(movieId).then(({ cast }) => {\n        const actorsArray = [];\n\n        cast.map(({ id, name, profile_path }) => {\n          const actor = {\n            id,\n            name,\n            photo: profile_path,\n          };\n          return actorsArray.push(actor);\n        });\n        setActors(actorsArray);\n      });\n    }, [movieId]);\n    return actors &&<ActorsList actors={actors}/>\n}\nexport default Cast;"],"names":["getMovieCredits","movieId","BASEURL","filter","fetch","response","json","data","List","styled","Item","PhotoWrap","Photo","Name","actors","Container","isPadding","map","id","name","photo","src","bgActor","alt","useParams","useState","setActors","useEffect","then","cast","actorsArray","actor","profile_path","push"],"sourceRoot":""}