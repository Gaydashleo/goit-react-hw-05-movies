{"version":3,"file":"static/js/334.428c8ad1.chunk.js","mappings":"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","sources":["components/Container/Container.styled.js","components/Container/Container.jsx","API/get-movie-details.js","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","pages/MovieDetailsPage.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ContainerWrap = styled.div`\n// width:350px;\n\npadding: 10px0 10px 100px 10px;\n`;","import PropTypes from 'prop-types';\nimport { ContainerWrap } from './Container.styled';\n\n\nfunction Container({ children }) {\n  return <ContainerWrap>{ children}</ContainerWrap>\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\nexport default Container;","async function getMovieDetails(movieId) {\n  const key = '718b6c0b68c7f19fbdcdb1a100511982';\n  const BASEURL = `https://api.themoviedb.org/3/movie/${movieId}`;\n  const filter = `?api_key=${key}&language=en-US`;\n  \n  const response = await fetch(`${BASEURL}${filter}`);\n  const data = await response.json();\n\n  return data;\n}\nexport default getMovieDetails;","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\n\nexport const ButtonGoBack = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n    width: 200px;\n  height: 40px;\n  // margin-bottom: 30px;\n  font-size: 15px;\n  background-image:linear-gradient(to right, #0B0A0A, #FFFFFF);\n  color:#F6ECEC;\n  border: none;\n  cursor: pointer;\n`;\n\nexport const Label = styled.span`\nmargin-left: 10px;\n`;\n\nexport const MainWrap = styled.div`\ndisplay: flex;\nmargin-bottom: 50px;\n`;\n\nexport const Poster = styled.img`\nwidth: 400px;\n`;\nexport const InfoWrap = styled.div`\nmargin-left: 50px;\n`;\n\nexport const TitleWrap = styled.div`\nmargin-bottom: 20px;\ndisplay: flex;\n    align-items: center;\n    justify-content: space-between;\n`;\n\nexport const Title = styled.h2`\nfont-size: 30px;\nmargin-bottom: 10px;\n`;\n\nexport const ReleaseDate = styled.p`\n  font-weight: 700;\n  font-size: 15px;\n`;\n\nexport const GenresList = styled.ul`\npadding-left:0px;\ndisplay: flex;\n\n`;\nexport const TitleGenres = styled.p`\nfont-size: 18px;\nfont-weight: 700;\n`;\n\n\nexport const GenresItem = styled.li`\n    font-size: 15px;\n  margin-right: 15px;\n  list-style-type:none;\n\n  :last-child {\n    margin-right: 0;\n  }\n`;\nexport const TitleDescription = styled.p`\nfont-size: 18px;\nfont-weight: 700;\n`;\nexport const Description = styled.p`\n\n`;\n\nexport const VoteWrap = styled.div`\n\n`;\n\nexport const VoteAverage = styled.p`\n\n`;\nexport const VoteCount = styled.p`\n\n`;\n\nexport const Value = styled.span`\n\n`;\n\nexport const AdditionalWrap = styled.div`\n\n`;\nexport const AdditionalTitle = styled.p`\n padding: 15px;\n  margin-bottom: 0px;\n  background-image:linear-gradient(to right, #0B0A0A, #FFFFFF);\n  color:#837D7D;\n`;\n\nexport const NavigationsList = styled.ul`\nmargin-top: 0px;\npadding-bottom: 15px;\nbackground-image:linear-gradient(to right, #0B0A0A, #FFFFFF);\ncolor:#837D7D;\n`;\n\nexport const NavigationsItem = styled.li`\n  margin-bottom: 15px;\n  \n  :last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const CustomLink = styled(NavLink)`\nfont-size: 18px;\npadding: 15px;\n   color:#837D7D;\n  transition: color 250ms linear;\n\n  &.active {\n  text-decoration: underline;\n  }\n  :hover{\n    color:#fafafa;\n  }\n// font-size: 18px;\n// color:#837D7D;\n`;","import Container from 'components/Container';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport bgPoster from '../../Image/IMAX.jpg'\nimport {\n  ButtonGoBack,\n  Label,\n  MainWrap,\n  Poster,\n  InfoWrap,\n  TitleWrap,\n  Title,\n  ReleaseDate,\n  TitleDescription,\n  TitleGenres,\n   GenresList,\n  GenresItem,\n  Description,\n  // VoteWrap,\n  // VoteAverage,\n  // VoteCount,\n  // Value,\n  AdditionalWrap,\n  AdditionalTitle,\n  NavigationsList,\n  NavigationsItem,\n  CustomLink,\n  } from \"./MovieDetails.styled\";\n  import { FaChevronRight, FaChevronLeft } from 'react-icons/fa'; \n\nfunction MovieDetails({ movieInfo }) {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const subLocation = location.state.from;\n\n  const {\n    title, genres, description, poster, releaseDate, \n  } = movieInfo;\n\n  const onGoBack = () => navigate(location?.state?.from ?? '/');\n  return (\n    <Container>\n      <ButtonGoBack type=\"button\" onClick={onGoBack}>\n        <FaChevronLeft />\n        <Label>Go back</Label>\n      </ButtonGoBack>\n\n      <MainWrap>\n        <Poster src={poster ? `https://image.tmdb.org/t/p/w500/${poster}` : bgPoster}\n          alt={title} />\n        <InfoWrap>\n          <TitleWrap>\n            <Title>{title}</Title>\n            <ReleaseDate>{ releaseDate}</ReleaseDate>\n          </TitleWrap>\n          <TitleDescription>Overview</TitleDescription>\n          <Description>{description}</Description>\n          <TitleGenres> Genres</TitleGenres>\n          <GenresList> \n              {genres &&\n              genres.map(({ name, id }) => (\n                <GenresItem key={id}>{name}</GenresItem>\n              ))}\n          </GenresList>\n          \n          {/* <VoteWrap>\n            <VoteAverage>\n              Vote average: <Value>{voteAverage}</Value>\n            </VoteAverage>\n            <VoteCount>\n              Vote count: <Value>{voteCount}</Value>\n            </VoteCount>\n          </VoteWrap>          */}\n        </InfoWrap>\n      </MainWrap>\n            <AdditionalWrap>\n        <AdditionalTitle>Additional Information</AdditionalTitle>\n        <NavigationsList>\n          <NavigationsItem>\n            <CustomLink to=\"cast\" state={{ from: subLocation }}>\n              <FaChevronRight /> Cast\n            </CustomLink>\n          </NavigationsItem>\n          <NavigationsItem>\n            <CustomLink to=\"reviews\" state={{ from: subLocation }}>\n              <FaChevronRight /> Reviews\n            </CustomLink>\n          </NavigationsItem>\n        </NavigationsList>\n      </AdditionalWrap>\n</Container>\n  );\n}\n\nMovieDetails.propTypes = {\n  movieInfo: propTypes.shape({\n    title: propTypes.string,\n    genres: propTypes.arrayOf(\n      propTypes.shape({\n        id: propTypes.number,\n        name: propTypes.string,\n      }),\n    ),\n    description: propTypes.string,\n    poster: propTypes.string,\n    releaseDate: propTypes.string,\n    voteAverage: propTypes.number,\n    voteCount: propTypes.number,\n  }),\n};\n\nexport default MovieDetails;","import { useState, useEffect, lazy, Suspense } from 'react';\nimport { useParams, Routes, Route } from 'react-router-dom';\nimport getMovieDetails from 'API/get-movie-details.js';\nimport MovieDetails from 'components/MovieDetails/index.js';\nimport Loader from 'components/Loader';\n\n\nconst Cast = lazy(() =>\n  import('./Cast.js'),);\n\nconst Reviews = lazy(() =>\n  import('./Reviews.js'),);  \n\nfunction MovieDetailsPage() {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(({\n      original_title,\n      genres,\n      overview,\n      poster_path,\n      release_date,\n      vote_average,\n      vote_count,\n    }) => {\n      const movieInfo = {\n        title: original_title,\n        genres: genres,\n        description: overview,\n        poster: poster_path,\n        releaseDate: release_date,\n        voteAverage: vote_average,\n        voteCount: vote_count,\n      };\n      return setMovieInfo(movieInfo);\n    },\n    );\n  }, [movieId]);\n\n  return (\n    <>\n      {movieInfo && <MovieDetails movieInfo={movieInfo} />}\n      \n      <Suspense fallback={<Loader />}>\n        <Routes>\n          <Route path='cast' element={<Cast />} />\n          <Route path='reviews' element={<Reviews />} />\n        </Routes>\n      </Suspense>\n    </>\n  );\n}\n\nexport default MovieDetailsPage; ","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["ContainerWrap","styled","children","getMovieDetails","movieId","BASEURL","filter","fetch","response","json","data","ButtonGoBack","Label","MainWrap","Poster","InfoWrap","TitleWrap","Title","ReleaseDate","GenresList","TitleGenres","GenresItem","TitleDescription","Description","AdditionalWrap","AdditionalTitle","NavigationsList","NavigationsItem","CustomLink","NavLink","movieInfo","location","useLocation","navigate","useNavigate","subLocation","state","from","title","genres","description","poster","releaseDate","Container","type","onClick","src","bgPoster","alt","map","name","id","to","Cast","lazy","Reviews","useParams","useState","setMovieInfo","useEffect","then","original_title","overview","poster_path","release_date","vote_average","vote_count","voteAverage","voteCount","Suspense","fallback","Loader","path","element","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}